{"version":3,"sources":["logo.svg","components/AuthHelperMethods.js","components/NavBar/NavBar.js","components/HomePage/HomePage.js","App.js","components/LoginPage/LoginPage.js","components/SignUpPage/SignUpPage.js","components/StartProjectPage/StartProjectPage.js","components/DisplayProjectDetailsPage/DisplayProjectDetailsPage.js","components/EditProjectDetailsPage/EditProjectDetailsPage.js","components/FundProjectPage/FundProjectPage.js","components/UserProfilePage/UserProfilePage.js","components/ExploreProjectsPage/ExploreProjectsPage.js","serviceWorker.js","index.js","images/books.jpg","images/game.jpg","images/movie.jpg","images/fundit.png"],"names":["module","exports","AuthHelperMethods","login","email","password","data","axios","post","then","res","console","log","setToken","token","Promise","resolve","loggedIn","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","logout","removeItem","getTokenData","fetch","url","options","headers","_checkStatus","response","json","status","error","Error","statusText","NavbarComp","props","Auth","window","location","reload","redirectToProfile","userDetails","history","push","pathname","username","loginArea","className","to","Button","variant","tokenData","DropdownButton","id","title","name","Dropdown","Item","onClick","Divider","style","color","marginBottom","Navbar","bg","expand","sticky","Brand","href","src","fundit","alt","width","height","Toggle","aria-controls","Collapse","Nav","Link","this","Component","withRouter","images","books","game","movie","backgroundColor","HomePage","handleUserInput","e","preventDefault","target","value","setState","submitSearch","search","state","searchString","renderCarousel","projects","length","carouselItems","map","project","index","randomImage","Math","floor","random","Carousel","key","orgname","teamname","projname","Caption","description","featuredProjects","validSearch","get","prevProps","prevState","JSON","stringify","isValid","display","justifyContent","margin","Form","inline","textAlign","onSubmit","FormControl","type","placeholder","onChange","event","disabled","alignContent","OverlayTrigger","placement","overlay","Tooltip","fontFamily","LoginPage","form","elements","redirectUrl","alert","catch","passedState","undefined","marginLeft","marginTop","marginRight","Group","role","controlId","Control","SignUpPage","setShow","showState","show","dummy","createUser","confirmPassword","confirmpassword","test","FormGroup","moment","require","StartProjectPage","startProject","team","goal","deadline","category","orgName","org","trim","parseInt","enteredDate","format","currentDateString","currentDate","isAfter","getCategoryDropdown","optionsList","values","x","as","handleCheckboxChange","oldVal","hideOrg","formInvalid","isUnfilled","shouldHideOrg","Container","Row","Col","xs","Label","rows","Check","label","checked","justifyItems","noProjectAbout","DisplayProjectDetailsPage","submitComment","details","projectData","postData","commentor","creator","comment","followUnfollowProject","curUser","follows","delete","curState","follower","withdrawFunding","backer","amount","setTimeout","renderFollowButton","renderText","border","renderWithdrawButton","hasFunded","renderDeleteComment","commentObj","deleteComment","timestamp","renderComments","comments","projectComments","datetime","unix","toDate","Card","Body","Title","Subtitle","redirectToFundPage","backerName","backerUsername","getDaysToDeadline","currentDateObj","tz","deadlineObj","duration","diff","asDays","redirectToEditPage","renderEditProject","renderBackOrStatus","renderProjectData","Object","keys","flexDirection","categories","ProgressBar","curfunds","numbackers","Tabs","defaultActiveKey","Tab","eventKey","about","validComment","isInvalid","match","params","teamName","projName","followed","found","forEach","proj","backed","EditProjectDetailsPage","redirectToHome","deleteProject","editProject","isValidAbout","FundProjectPage","backProject","pledgeSuccessful","renderOptionOrText","renderFundProjectPage","isValidAmount","UserProfilePage","renderProjects","ExploreProjectsPage","renderProjectList","hasSearchedSomething","link","ListGroup","locationState","Boolean","hostname","routing","exact","path","component","App","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48a71536.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import decode from 'jwt-decode';\nimport axios from 'axios';\n\nexport default class AuthHelperMethods {\n    \n    // Initializing important variables\n\n    login = (email, password) => {\n\n        let data = {\n            'email': email,\n            'password': password\n        }\n        \n        // Get a token from api server using the fetch api\n        return axios.post(`http://localhost:3003/api/v1/login`, data)\n        .then(res => {\n            console.log(res)\n            this.setToken(res.data.token) // Setting the token in localStorage\n            return Promise.resolve(res);\n        })\n    }\n\n\n    loggedIn = () => {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired = (token) => {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired.\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            console.log(\"expired check failed! Line 42: AuthService.js\");\n            return false;\n        }\n    }\n\n    setToken = (idToken) => {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getTokenData = () => {\n        // Using jwt-decode npm package to decode the token\n        let data = decode(this.getToken());\n        console.log(\"Recieved answer!\");\n        return data;\n    }\n\n    fetch = (url, options) => {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus = (response) => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router } from \"react-router-dom\"\nimport { Navbar, Nav, Button, DropdownButton, Dropdown } from 'react-bootstrap';\nimport fundit from '../../images/fundit.png'\nimport AuthHelperMethods from '../AuthHelperMethods';\n\nclass NavbarComp extends Component {\n\n    constructor(props) {\n        super(props)\n        this.Auth = new AuthHelperMethods();\n        this.token = this.Auth.getToken()\n        \n    }\n\n    logout = () => {\n        this.Auth.logout();\n        window.location.reload();\n    }\n\n    redirectToProfile = () => {\n        const userDetails = this.Auth.getTokenData()\n        this.props.history.push({\n            pathname: `/profile/${userDetails.username}`\n        })\n    }\n\n    loginArea = () => {\n        if (this.token === null) {\n            return (\n                <div className=\"login\">\n                    <Link to=\"/login\"><Button variant=\"outline-secondary\">Login</Button></Link>\n                    &nbsp;\n                    &nbsp;\n                <Link to=\"/signup\"><Button variant=\"outline-secondary\">Sign Up</Button></Link>\n                </div>\n            )\n        } else {\n            let tokenData = this.Auth.getTokenData();\n\n            console.log(tokenData)\n            return (\n                <DropdownButton id=\"dropdown-basic-button\" title={tokenData.name} variant=\"secondary\" >\n                    <Dropdown.Item onClick={this.redirectToProfile}>Profile</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={this.logout}>\n                        <p style={{ color: \"red\", marginBottom: \"0px\" }}>Logout</p>\n                    </Dropdown.Item>\n                </DropdownButton >\n            )\n        }\n    }\n\n    render() {\n        return (\n            // <div>\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\" >\n                    <Navbar.Brand href=\"/\"><img src={fundit} alt=\"FundIt Logo\"\n                        style={{ width: 120, height: 37 }}\n                    /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/explore\">Explore</Nav.Link>\n                            <Nav.Link href=\"/start\">Start a Project</Nav.Link>\n                        </Nav>\n                        {this.loginArea()}\n                    </Navbar.Collapse>\n                </Navbar>\n\n            // </div>\n        )\n    }\n};\n\nexport default withRouter(NavbarComp);","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tooltip, OverlayTrigger, Carousel, Form, FormControl, Button } from 'react-bootstrap';\nimport './HomePage.css'\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\nimport game from '../../images/game.jpg'\nimport movie from '../../images/movie.jpg'\n\nconst images = [books, game, movie]\n\nconst Divider = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.1\n        }}\n    />\n);\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            featuredProjects: [],\n            search: '',\n            validSearch: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:3003/api/v1/getFeaturedProjects')\n            .then(response => {\n                let data = response.data\n                console.log(data)\n                this.setState({\n                    featuredProjects: data\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { search } = this.state\n            let isValid = !(search === '')\n            this.setState({\n                validSearch: isValid\n            })\n        }\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    submitSearch = () => {\n        const { search } = this.state\n        this.props.history.push({\n            pathname: `/explore`,\n            state: { searchString: search }\n        })\n    }\n\n    renderCarousel = (projects) => {\n        console.log('rendering carousel');\n        console.log(projects.length);\n        let carouselItems = projects.map((project, index) => {\n            let randomImage = Math.floor(Math.random() * 3)\n            console.log(randomImage);\n            return (\n                <Carousel.Item key={index}>\n                    <Link to={`/projects/${project.username}/${project.orgname}/${project.teamname}/${project.projname}`}>\n                        <img\n                            src={images[randomImage]}\n                            alt=\"img\"\n                            style={{ width: 850, height: 500 }}\n                        />\n                        <Carousel.Caption>\n                            <h3>{project.projname}</h3>\n                            <p>{project.description}</p>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            )\n        })\n        return (\n            <Carousel>\n                {carouselItems}\n            </Carousel >\n        )\n    }\n\n    render() {\n        let projects = this.state.featuredProjects\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ display: 'flex', justifyContent: 'center', margin: \"10px\" }}>\n                    <Form inline style={{ textAlign: \"center\" }} onSubmit={this.submitSearch}>\n                        <FormControl type=\"text\" placeholder=\"Search\" name=\"search\" className=\"mr-sm-2\" onChange={(event) => this.handleUserInput(event)}/>\n                        <Button variant=\"outline-success\"  type=\"submit\" disabled={!this.state.validSearch}>Search</Button>\n                    </Form>\n                </div>\n                <Divider color=\"gray\" />\n                <div style={{ display: 'flex', justifyContent: \"center\", alignContent: \"center\" }}>\n                    <OverlayTrigger\n                        key=\"right\"\n                        placement=\"right\"\n                        overlay={\n                            <Tooltip id=\"tooltip-right\">\n                                Projects that have been funded the most\n                        </Tooltip>\n                        }\n                    >\n                        <p style={{ color: \"gray\", fontFamily: \"sans-serif\" }} > Featured Projects </p>\n\n                    </OverlayTrigger>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <div\n                        style={{\n                            margin: \"5px\",\n                            textAlign: \"center\", width: \"850px\",\n                            display: \"inline-block\"\n                        }}\n                    >\n                        {this.renderCarousel(projects)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(HomePage);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage'\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <HomePage />\n  );\n}\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom'\nimport { Form, Button} from \"react-bootstrap\"\nimport NavbarComp from '../NavBar/NavBar'\nimport './LoginPage.css'\nimport AuthHelperMethods from '../AuthHelperMethods';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirectUrl: \"/\"\n        }\n    }\n\n    Auth = new AuthHelperMethods();\n\n    login = (event) => {\n        event.preventDefault()\n\n        let form = event.target;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n\n        console.log(`Attempting login with ${email} and ${password}`);\n        console.log(`Redirecting to ${this.state.redirectUrl}`);\n        \n        this.Auth.login(email, password)\n            .then(res => {\n                if (res === false) {\n                    return alert(\"Invalid Credentials!\");\n                }\n                this.props.history.push(this.state.redirectUrl);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"Invalid Credentials!\");\n            })\n\n    }\n\n    componentDidMount() {\n        const passedState = this.props.location.state\n        if (passedState !== undefined && passedState !== null) {\n            this.setState({\n                redirectUrl: passedState.redirectUrl\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ marginLeft: \"35%\", marginTop: \"10%\", marginRight: \"35%\" }}>\n                    <h3> Log In </h3>\n                    <Form onSubmit={this.login}>\n                        <Form.Group role=\"form\">\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n                            </Form.Group>\n                            <Button style={{ marginLeft: \"40%\" }} variant=\"primary\" type=\"submit\">\n                                Login\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                    <p style={{ textAlign: \"center\", marginTop: \"5px\" }}>\n                        Don't have an account? <Link to=\"/signup\">Sign Up </Link>\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LoginPage);\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter, Link } from 'react-router-dom'\nimport { Form, Button, Container, Row, Toast, FormGroup } from \"react-bootstrap\"\nimport NavbarComp from '../NavBar/NavBar'\nimport { Redirect } from 'react-router'\n\nclass SignUpPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            data: undefined,\n            show: false\n        }\n    }\n\n    setShow = (showState) => {\n        this.setState({\n            show: showState\n        })\n    }\n\n    dummy = () => {\n        console.log(\"test\")\n    }\n\n    createUser = (event) => {\n        event.preventDefault();\n\n        let form = event.target;\n        const name = form.elements.name.value;\n        const username = form.elements.username.value;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n        const confirmPassword = form.elements.confirmpassword.value;\n\n        var re = /^\\w+$/;\n        if (password.length < 6) {\n            alert(\"Password must be at least 6 characters\")\n        } else if (password !== confirmPassword) {\n            alert(\"Passwords don't match!\")\n        } else if (!re.test(username)) {\n            alert(\"Username must only contain letters, numbers and underscore(s)\\ne.g. new_user123\")\n        }\n        else {\n            const data = {\n                'username': username,\n                'name': name,\n                'email': email,\n                'password': password\n            }\n\n            console.log(data)\n            axios.post('http://localhost:3003/api/v1/signup', data)\n                .then((response) => {\n                    this.props.history.push(\"/login\")\n\n                })\n                .catch(error => {\n                    console.log(error)\n                    alert(\"User with the same email already exists!\")\n                });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ marginLeft: \"35%\", marginTop: \"10%\", marginRight: \"35%\" }}>\n                    <h3> Sign Up </h3>\n                    <Form onSubmit={this.createUser}>\n                        <FormGroup role=\"form\">\n                            <Form.Group controlId=\"formBasicName\">\n                                <Form.Control type=\"name\" placeholder=\"Name\" name=\"name\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicName\">\n                                <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmpassword\" />\n                            </Form.Group>\n                            <Button style={{ marginLeft: \"40%\", }} variant=\"primary\" type=\"submit\">\n                                Sign Up\n                         </Button>\n                        </FormGroup>\n                    </Form>\n                    <p style={{ textAlign: \"center\", marginTop: \"5px\" }}>\n                        Already have an account? <Link to=\"/login\">Login</Link>\n                    </p>\n                    {/* <Toast onClose={() => this.setShow(false)} show={this.state.show} delay={3000} autohide>\n                        <Toast.Body>Unable to sign up! {this.state.errorMessage}</Toast.Body>\n                    </Toast> */}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default withRouter(SignUpPage);\n\n\n\n","import React, { Component , useState } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { Link, BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { Container, Row, Col, Form, FormControl, Button } from 'react-bootstrap';\nimport NavbarComp from '../NavBar/NavBar'\nimport AuthHelperMethods from '../AuthHelperMethods';\nvar moment = require('moment')\n\nclass StartProjectPage extends Component {\n    Auth = new AuthHelperMethods()\n    constructor(props) {\n        super(props)\n        this.state = {\n            values: [],\n            category: 'Art',\n            title: '',\n            description: '',\n            team: '',\n            goal: '',\n            deadline: '',\n            orgName: null,\n            formInvalid: true,\n            hideOrg: true\n        }\n    }\n\n    startProject = (e) => {\n        e.preventDefault()\n        console.log(this.state);\n\n        const {team, title, description, goal, deadline, category, orgName} = this.state;\n        let tokenData = this.Auth.getTokenData()\n\n        let org = orgName === null? '$Independent$': orgName.trim()\n        let data = {\n            'team': team.trim(),\n            'title': title.trim(),\n            'category': category,\n            'description': description.trim(),\n            'goal': parseInt(goal),\n            'deadline': deadline,\n            'username': tokenData.username,\n            'orgName': org\n        }\n\n        let enteredDate = moment(this.state.deadline).format(\"YYYY-MM-DD\")\n        let currentDateString = moment().get('year')+\"-\"+(moment().get('month')+1)+\"-\"+moment().get('date');\n        let currentDate = moment(currentDateString).format(\"YYYY-MM-DD\")\n\n        let isAfter = moment(enteredDate).isAfter(currentDate)\n\n        if (!isAfter) {\n            alert(`Please enter a date in the future, i.e. after ${moment(currentDate).format(\"DD-MM-YYYY\")}`)\n            return\n        }\n        axios.post('http://localhost:3003/api/v1/start', data)\n        .then((response) => {\n            // let details  = {\n            //     username: tokenData.username,\n            //     orgname: org,\n            //     teamname: team,\n            //     projname: title\n            // }\n            this.props.history.push({\n                pathname:`/editproject/${tokenData.username}/${org}/${team}/${title}`,\n            })\n        })\n        .catch((error) => {\n            console.log(error.response.data)\n            alert(error.response.data)\n        })\n\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:3003/api/v1/categories')\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    values: response.data,\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    getCategoryDropdown = () => {\n        let values = this.state.values;\n        let optionsList = values.map((x, index) => <option key={index}>{x.category}</option>)\n        return (\n            <Form.Control as=\"select\" name=\"category\">\n                {optionsList}\n            </Form.Control >\n        )\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n        console.log(this.state);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { title, description, team, deadline, goal, hideOrg, orgName } = this.state\n            let isUnfilled = title == '' || description == '' || team == '' || deadline == '' || goal == '' || (!hideOrg && orgName === null)\n            this.setState({\n                formInvalid: isUnfilled\n            })\n        }\n\n    }\n\n    handleCheckboxChange = (e) => {\n        let oldVal = this.state.hideOrg;\n        this.setState({\n            hideOrg: !oldVal\n        })\n\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            // this.props.history.replace('/login')\n            this.props.history.push({\n                pathname: '/login',\n                state: { redirectUrl: \"/start\" }\n            })\n        }\n        const shouldHideOrg = this.state.hideOrg;\n        console.log(shouldHideOrg);\n        \n        return (\n            <div>\n                <NavbarComp />\n                <h2 style={{ marginTop: \"2%\", textAlign: \"center\", fontFamily: \"courier\" }}> Let's get you started. </h2>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col xs={7}>\n                            <Form onSubmit={this.startProject}>\n                                <Form.Group onChange={(event) => this.handleUserInput(event)}>\n                                    <Form.Label>Project Category</Form.Label>\n                                    {this.getCategoryDropdown()}\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Title</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"1\" name=\"title\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Tile that catches the eye of the reader.\" />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Description</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"3\" name=\"description\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Let people know why you deserve to make your dreams come true.\" />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Team</Form.Label>\n                                    <Form.Control type=\"text\" name=\"team\" placeholder=\"Put your creative hat on!\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Funding goal amount (S$)</Form.Label>\n                                    <Form.Control type=\"number\" name=\"goal\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Funding deadline</Form.Label>\n                                    <Form.Control type=\"date\" name=\"deadline\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Organization</Form.Label>\n                                    <Form.Check style={{ marginBottom: \"4px\" }}\n                                        type=\"checkbox\"\n                                        id=\"orgCheck\"\n                                        label=\"Independent Project\"\n                                        onChange={this.handleCheckboxChange}\n                                        checked={this.state.hideOrg}\n                                    />\n                                    {\n                                        !this.state.hideOrg\n                                        ?(<Form.Control type=\"text\" name=\"orgName\" placeholder=\"Parent organization\" onChange={(event) => this.handleUserInput(event)} />)\n                                        : null\n                                    }\n                                </Form.Group>\n                                <Button style={{justifyItems:\"center\"}}  variant=\"dark\" type=\"submit\" disabled={this.state.formInvalid}>\n                                    Create Project\n                                </Button>\n                            </Form>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(StartProjectPage)\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\"\nimport { Container, Row, Col, Button, ProgressBar, Tab, Tabs, Form, Card } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\nimport game from '../../images/game.jpg'\nimport movie from '../../images/movie.jpg'\nimport './DisplayProjectDetailsPage.css'\nvar moment = require('moment-timezone');\n\nconst images = [books, game, movie]\n\nconst Divider = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.1\n        }}\n    />\n);\n\nconst noProjectAbout = 'The creator hasn\\'t provided a detailed description of this project.'\n\nclass DisplayProjectDetailsPage extends Component {\n    Auth = new AuthHelperMethods()\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projectData: null,\n            follows: false,\n            hasFunded: false,\n            validComment: false,\n            comment: '',\n            projectComments: []\n        }\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value });\n    }\n\n    submitComment = () => {\n        let details = this.state.projectData\n\n        let postData = {\n            commentor: this.Auth.getTokenData().username,\n            creator: details.username,\n            orgname: details.orgname,\n            teamname: details.teamname,\n            projname: details.projname,\n            comment: this.state.comment\n        }\n        axios.post('http://localhost:3003/api/v1/comment', postData)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(`/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n            })\n            .catch(error => {\n                console.log(error.response.data);\n                alert(error.response.data)\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { comment } = this.state\n            let isInvalid = comment == ''\n            this.setState({\n                validComment: !isInvalid\n            })\n        }\n    }\n\n    async componentDidMount() {\n        console.log('back here at display project page')\n        if (!this.Auth.loggedIn()) { return }\n        let curUser = this.Auth.getTokenData().username;\n        const { username, orgName, teamName, projName } = this.props.match.params\n\n\n        axios.get(`http://localhost:3003/api/v1/user/${curUser}`)\n            .then(response => {\n                let data = response.data\n                console.log('user data:')\n                console.log(data.followed);\n\n                let found = false\n                let hasFunded = false\n                data.followed.forEach(proj => {\n                    if (proj.creator === username\n                        && proj.orgname === orgName && proj.teamname === teamName && proj.projname === projName) {\n                        found = true\n                    }\n                })\n                data.backed.forEach(proj => {\n                    if (proj.creator === username\n                        && proj.orgname === orgName && proj.teamname === teamName && proj.projname === projName) {\n                        hasFunded = true\n                    }\n                })\n                if (found) {\n                    console.log('Setting follows to true');\n                    this.setState({\n                        follows: found\n                    })\n                }\n                if (hasFunded) {\n                    console.log('Setting hasFunded to true');\n                    this.setState({\n                        hasFunded: hasFunded\n                    })\n                }\n            })\n\n        console.log(`http://localhost:3003/api/v1/projects/${username}/${orgName}/${teamName}/${projName}`);\n\n        var postData = null\n        axios.get(`http://localhost:3003/api/v1/projects/${username}/${orgName}/${teamName}/${projName}`)\n            .then((response) => {\n                console.log((response.data));\n                let data = response.data;\n                let daysToDeadline = this.getDaysToDeadline(data)\n                if (daysToDeadline <= 0 && data.status === 'In Progress') {\n                    console.log('changing status');\n                    if (data.curfunds < data.goal) {\n                        data.status = 'Abandoned'\n                    } else {\n                        data.status = 'Complete'\n                    }\n                    // set the status\n                    postData = {\n                        username: username,\n                        orgname: orgName,\n                        teamname: teamName,\n                        projname: projName,\n                        status: data.status\n                    }\n                }\n                console.log(data.status);\n                this.setState({\n                    projectData: data\n                })\n                if (postData !== null) {\n                    return axios.post(`http://localhost:3003/api/v1/setStatus`, postData)\n                }\n            })\n            .then(response => {\n                console.log('status changed');\n            })\n            .catch(error => {\n                alert(error)\n            })\n\n        axios.get(`http://localhost:3003/api/v1/comments/${username}/${orgName}/${teamName}/${projName}`)\n            .then(response => {\n                let comments = response.data\n                this.setState({\n                    projectComments: comments\n                })\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    followUnfollowProject = () => {\n        let data = this.state.projectData;\n        let curUser = this.Auth.getTokenData().username;\n        if (this.state.follows) {\n            axios.delete(`http://localhost:3003/api/v1/follow/${curUser}/${data.username}/${data.orgname}/${data.teamname}/${data.projname}`)\n                .then(response => {\n                    console.log('unfollowed');\n                    let curState = this.state.follows\n                    this.setState({\n                        follows: !curState\n                    })\n                })\n                .catch(error => {\n                    console.log('error');\n                })\n        } else {\n            let postData = {\n                follower: curUser,\n                creator: data.username,\n                orgname: data.orgname,\n                teamname: data.teamname,\n                projname: data.projname\n            }\n            axios.post('http://localhost:3003/api/v1/follow', postData)\n                .then(response => {\n                    console.log('followed');\n                    let curState = this.state.follows\n                    this.setState({\n                        follows: !curState\n                    })\n                })\n                .catch(error => {\n                    console.log('error');\n                })\n        }\n    }\n\n    withdrawFunding = () => {\n        let data = this.state.projectData;\n        let curUser = this.Auth.getTokenData().username;\n        let postData = {\n            backer: curUser,\n            creator: data.username,\n            orgname: data.orgname,\n            teamname: data.teamname,\n            projname: data.projname\n        }\n        axios.post(`http://localhost:3003/api/v1/withdraw`, postData)\n            .then(response => {\n                console.log(response.data);\n                console.log(response.data.amount);\n                alert(`You have withdrawn S$ ${response.data.amount} from this project`)\n\n                setTimeout(() => {\n                    window.location.reload()\n                }, 3000)\n\n            })\n            .catch(error => {\n                alert(`Error!`)\n            })\n    }\n\n    renderFollowButton = (details) => {\n        let curUser = this.Auth.getTokenData().username;\n        let renderText = \"Follow\"\n        if (this.state.follows) {\n            renderText = \"Unfollow\"\n        }\n        console.log(curUser);\n        console.log(details.username);\n\n        if (curUser === details.username) {\n            return null;\n        } else {\n            return (\n                <Button style={{ width: \"100%\", border: \"1px solid black\", marginTop: \"2%\" }} variant=\"Light\" onClick={this.followUnfollowProject}>\n                    {renderText}\n                </Button>\n            )\n        }\n    }\n\n    renderWithdrawButton = (details) => {\n        let curUser = this.Auth.getTokenData().username;\n        let renderText = \"Withdraw Funding\"\n        if (!this.state.hasFunded) {\n            return null;\n        }\n        return (\n            <Button style={{ width: \"100%\", marginTop: \"2%\" }} variant=\"danger\" onClick={this.withdrawFunding}>\n                {renderText}\n            </Button>\n        )\n    }\n\n    renderDeleteComment = (commentObj) => {\n        if (commentObj.commentor === this.Auth.getTokenData().username) {\n            return (<Button variant=\"danger\" onClick={() => this.deleteComment(commentObj)}>\n                Delete\n            </Button>)\n        }\n    }\n\n    deleteComment = (commentObj) => {\n        axios.delete(`http://localhost:3003/api/v1/comment/${commentObj.commentor}/${commentObj.timestamp}`)\n            .then(response => {\n                console.log(response.data);\n                window.location.reload()\n            })\n            .catch(error => {\n                alert(error.response.data)\n            })\n    }\n\n    renderComments = () => {\n        let comments = this.state.projectComments;\n        return (\n            <div style={{ marginTop: \"2%\" }}>\n                {\n                    comments.map((commentObj, index) => {\n                        const datetime = moment(moment.unix(commentObj.timestamp).toDate()).format('MMM Do YYYY, hh:mm a')\n                        console.log(datetime);\n\n                        return <Card style={{ marginTop: \"1%\" }} key={index}>\n                            <Card.Body>\n                                <Card.Title>@{commentObj.commentor}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">{datetime}</Card.Subtitle>\n                                <Card.Body>\n                                    {commentObj.comment}\n                                </Card.Body>\n                                {this.renderDeleteComment(commentObj)}\n                            </Card.Body>\n                        </Card>\n                    })\n                }\n            </div>\n        )\n    }\n\n    redirectToFundPage = () => {\n        const details = this.state.projectData\n        details.backerName = this.Auth.getTokenData().name;\n        details.backerUsername = this.Auth.getTokenData().username;\n        this.props.history.push({\n            pathname: `/fund/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`,\n            state: { data: details }\n        })\n    }\n\n    getDaysToDeadline = (details) => {\n        let currentDateString = moment().get('year') + \"-\" + (moment().get('month') + 1) + \"-\" + moment().get('date');\n        let currentDateObj = moment(currentDateString).tz(\"Asia/Singapore\")\n\n        var deadlineObj = moment(details.deadline).tz(\"Asia/Singapore\")\n        return moment.duration(deadlineObj.diff(currentDateObj)).asDays();\n    }\n\n    redirectToEditPage = (details) => {\n        this.props.history.push({\n            pathname: `/editproject/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`,\n            // state: { data: details }\n        })\n    }\n\n    renderEditProject = (details) => {\n        let curUser = this.Auth.getTokenData().username\n        if (details.username !== curUser) {\n            return null\n        }\n        return <Button style={{ width: \"100%\" }} variant=\"primary\" onClick={() => this.redirectToEditPage(details)}>\n            Edit Project\n        </Button>\n    }\n\n    renderBackOrStatus = (details) => {\n        console.log(details.status);\n\n        if (details.status === 'In Progress') {\n            return (\n                <div>\n                    <div className=\"div-stats\">\n                        <h3 className=\"generic-h3-stats\">{this.getDaysToDeadline(details)} </h3>\n                        <p className=\"generic-p-stats\">day{this.getDaysToDeadline(details) > 1 ? 's' : null} to go</p>\n                    </div>\n\n                    {this.renderEditProject(details)}\n                    <Button style={{ width: \"100%\", marginTop:\"2%\" }} variant=\"success\" type=\"submit\" onClick={this.redirectToFundPage}>\n                        Back this project\n                    </Button>\n                    {this.renderWithdrawButton(details)}\n                    {this.renderFollowButton(details)}\n                </div>\n            )\n        } else if (details.status === 'Complete') {\n            return (\n                <div>\n                    <h3 className=\"h3-complete\">Project Funding Complete!</h3>\n                </div>\n            )\n        } else {\n\n            return (\n                <div>\n                    <h3 className=\"h3-abandoned\">Project Funding Abandoned!</h3>\n                </div>\n            )\n        }\n    }\n\n    renderProjectData = () => {\n        if (this.state.projectData == null || Object.keys(this.state.projectData).length == 0) {\n            return null;\n        }\n        let details = this.state.projectData;\n        let randomImage = Math.floor(Math.random() * 3)\n        return (\n            <div style={{ marginTop: \"1%\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>{details.projname}</h2>\n                    <h5>{details.description}</h5>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignContent: \"center\" }}>\n                        <h6>Creator: @{details.username}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Org: {details.orgname === '$Independent$' ? `Independent` : details.orgname}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Team: {details.teamname}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Category: {details.categories}</h6>\n                    </div>\n                </div>\n                <Container style={{ marginTop: \"3%\" }}>\n                    <Row>\n                        <Col >\n                            <img\n                                src={images[randomImage]}\n                                alt=\"img\"\n                                style={{ width: 750, height: 450 }}\n                            />\n                        </Col>\n                        <Col>\n                            <ProgressBar variant=\"success\" now={(details.curfunds / details.goal) * 100} />\n                            <div>\n                                <div style={{ marginBottom: \"3%\" }}>\n                                    <div className=\"div-stats\">\n                                        <h3 className=\"curfunds\">S$ {details.curfunds} </h3>\n                                        <p className=\"goal\">pledged of S$ {details.goal} goal </p>\n                                    </div>\n\n                                    <div className=\"div-stats\">\n                                        <h3 className=\"generic-h3-stats\">{details.numbackers} </h3>\n                                        <p className=\"generic-p-stats\">backer{details.numbackers > 1 ? 's' : null} </p>\n                                    </div>\n                                    {this.renderBackOrStatus(details)}\n                                </div>\n                                <div style={{ marginTop: \"2%\" }}>\n                                    <p className=\"p-fineprint\">\n                                        All or nothing funding. This project will only be funded if it reaches its goal by {moment(details.deadline).format(\"dddd, MMMM Do YYYY\")} 0000 hrs SGT.\n                                    </p>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <Row>\n                        <Col>\n                            <Divider color=\"gray\" />\n                            <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\n                                <Tab eventKey=\"about\" title=\"About\">\n                                    {/* <div style ={{textAlign: \"center\"}}><h4>Hi</h4></div> */}\n                                    <div style={{ marginTop: \"3%\" }}>\n                                        <p>{this.state.projectData.about === null ? noProjectAbout : this.state.projectData.about}</p>\n                                    </div>\n                                    {/* {this.renderProjects(data, 'created')} */}\n                                </Tab>\n                                <Tab eventKey=\"rewards\" title=\"Rewards\">\n                                    <h3>Rewards</h3>\n                                    {/* {this.renderProjects(data, 'backed')} */}\n                                </Tab>\n                                <Tab eventKey=\"comments\" title=\"Comments\">\n                                    <div style={{ marginTop: \"2%\", display: 'flex', flexDirection: \"column\" }}>\n                                        <Form onSubmit={this.submitComment}>\n                                            <Form.Group >\n                                                <Form.Control as=\"textarea\" rows=\"3\" name=\"comment\" onChange={(event) => this.handleUserInput(event)}\n                                                    placeholder=\"Type your comment here.\" />\n                                            </Form.Group>\n                                            <Button style={{ justifyItems: \"center\" }} variant=\"dark\" type=\"submit\" disabled={!this.state.validComment}>\n                                                Comment\n                                            </Button>\n                                        </Form>\n                                        {this.renderComments()}\n                                    </div>\n                                    {/* {this.renderProjects(data, 'followed')} */}\n                                </Tab>\n                            </Tabs>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            console.log('redirecting to login page');\n\n            const { username, orgName, teamName, projName } = this.props.match.params\n            this.props.history.push({\n                pathname: '/login',\n                state: { redirectUrl: `/projects/${username}/${orgName}/${teamName}/${projName}` }\n            })\n        }\n        return (\n            <div>\n                <NavbarComp />\n                {this.renderProjectData()}\n            </div>\n\n        )\n    }\n}\n\nexport default withRouter(DisplayProjectDetailsPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\"\nimport { Container, Row, Col, Button, ProgressBar, Tab, Tabs, Form, Card } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nvar moment = require('moment-timezone');\n\nclass EditProjectDetailsPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: null,\n            isValidAbout: false,\n            about: ''\n        }\n    }\n\n    componentDidMount() {\n        const { username, orgname, teamname, projname } = this.props.match.params\n        console.log(this.props.match.params);\n\n        let details = {\n            username: username,\n            orgname: orgname,\n            teamname: teamname,\n            projname: projname\n        }\n        this.setState({\n            projectData: details\n        })\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { about } = this.state\n            let isValid = !(about === '')\n            this.setState({\n                isValidAbout: isValid\n            })\n        }\n    }\n\n    redirectToHome = () => {\n        console.log('redirecting to home')\n        this.props.history.push('/')\n    }\n\n    deleteProject = (details) => {\n        axios.delete(`http://localhost:3003/api/v1/project/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n            .then(response => {\n                alert('Project deleted. Redirecting you to the home page')\n                this.redirectToHome()\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    editProject = () => {\n        let details = this.state.projectData;\n        let postData = {\n            username: details.username,\n            orgname: details.orgname,\n            teamname: details.teamname,\n            projname: details.projname,\n            about: this.state.about\n        }\n        axios.post('http://localhost:3003/api/v1/editProject', postData)\n            .then(response => {\n                console.log('updated!');\n                alert('Project edited. Redirecting you to the project details page')\n                this.props.history.push(`/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n                // this.props.history.push('/')\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    render() {\n        let details = this.state.projectData\n        if (details === null) {\n            return null;\n        }\n        return (\n            <div>\n                <NavbarComp />\n                <h2 style={{ marginTop: \"2%\", textAlign: \"center\", fontFamily: \"courier\" }}> Edit '{this.state.projectData.projname}'</h2>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col xs={7}>\n                            <Form>\n                                <Form.Group >\n                                    <Form.Label>About</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"5\" name=\"about\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Talk more about your project (eg. the inspiration, the obstacles, and the novel idea)\" />\n                                </Form.Group>\n                                <div style={{ textAlign: \"center\" }}>\n                                    <Button style={{ justifyItems: \"center\" }} variant=\"success\" onClick={this.editProject} disabled={!this.state.isValidAbout}>\n                                        Edit Project\n                                    </Button>\n                                    <Button style={{ justifyItems: \"center\", marginLeft: \"2%\" }} variant=\"danger\" onClick={() => this.deleteProject(details)}>\n                                        Delete Project\n                                    </Button>\n                                </div>\n                            </Form>\n                            <div style={{ textAlign: \"center\" }}>\n                                <Button style={{ justifyItems: \"center\", marginTop: \"5%\" }} variant=\"link\" onClick={() => this.redirectToHome()}>\n                                    Back to Home\n                                </Button>\n                            </div>\n\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditProjectDetailsPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Container, Row, Col, Button, Form, FormGroup } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\n\nclass FundProjectPage extends Component {\n    Auth = new AuthHelperMethods()\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: null,\n            amount: 0,\n            disabled: true,\n            pledgeSuccessful: false\n        }\n    }\n\n    componentDidMount() {\n        const details = this.props.location.state.data\n        console.log(\"at the funding page!!\")\n        console.log(details)\n        this.setState({\n            projectData: details\n        })\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    backProject = () => {\n        let data = {\n            amount: parseInt(this.state.amount),\n            backer: this.state.projectData.backerUsername,\n            creator: this.state.projectData.username,\n            orgname: this.state.projectData.orgname,\n            teamname: this.state.projectData.teamname,\n            projname: this.state.projectData.projname\n        }\n\n        axios.post('http://localhost:3003/api/v1/fund', data)\n            .then(response => {\n                let details = this.state.projectData\n                console.log(response)\n                console.log('success!!')\n                this.setState({\n                    pledgeSuccessful: true\n                })\n\n                setTimeout(() => {\n                    this.props.history.push({\n                        pathname: `/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`\n                    })\n                }, 3000)\n\n\n            })\n            .catch(error => {\n                console.log(error)\n                console.log('error!!')\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { amount } = this.state\n            let isValidAmount = parseInt(amount) > 0 ? true : false;\n            this.setState({\n                disabled: !isValidAmount\n            })\n        }\n    }\n\n    renderOptionOrText = (details) => {\n        if (this.state.pledgeSuccessful) {\n            return (\n                <div style={{ marginTop: \"2%\", display: 'flex', flexDirection:'column', justifyContent: 'center', textAlign: 'center'}}>\n                    <div style={{display: 'inline-block'}}>\n                        <h5>Thank you for your generosity, {details.backerName}!</h5>\n                    </div>\n                    <div style={{display: 'inline-block'}}>\n                        <p>Redirecting you to the {details.projname} project page...</p>\n                    </div>\n                </div>\n\n\n            )\n        } else {\n            return (\n                <div style={{ marginTop: \"2%\", display: 'flex', justifyContent: 'center' }}>\n                    <Form>\n                        <FormGroup role=\"form\">\n                            <Form.Group>\n                                <Form.Control type=\"number\" placeholder=\"Pledge Amount (S$)\" name=\"amount\" onChange={this.handleUserInput} />\n                            </Form.Group>\n                        </FormGroup>\n                    </Form>\n                    <Button style={{ marginLeft: \"1%\", height: \"40%\" }} variant=\"success\" disabled={this.state.disabled} onClick={this.backProject}>\n                        Pledge\n                    </Button>\n                </div>\n            )\n        }\n\n    }\n\n    renderFundProjectPage = (details) => {\n        return (\n            <div style={{ marginTop: \"1%\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>{details.projname}</h2>\n                    <h5>{details.description}</h5>\n                </div>\n                {this.renderOptionOrText(details)}\n\n            </div>)\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            if (this.state.projectData !== null || this.state.projectData !== undefined) {\n                const details = this.state.projectData\n                this.props.history.push({\n                    pathname: '/login',\n                    state: { redirectUrl: `/fund/${details.username}/${details.orgname}/${details.teamname}/${details.projname}` }\n                })\n            }\n        }\n        let details = this.state.projectData;\n        return (\n            <div>\n                <NavbarComp />\n                {(details == null || Object.keys(details).length == 0) ? null : this.renderFundProjectPage(details)}\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(FundProjectPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tab, Tabs, Container, Row, Col } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\n\nclass UserProfilePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            data: null\n        }\n    }\n\n    componentDidMount() {\n        console.log('mounted');\n        const { username } = this.props.match.params\n\n        axios.get(`http://localhost:3003/api/v1/user/${username}`)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    data: response.data\n                })\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    }\n\n    renderProjects = (data, type) => {\n        if (data !== null) {\n            if (data[type].length === 0) {\n                return (\n                    <div style={{ textAlign: \"center\", marginTop: \"2%\" }}>\n                        <h5>\n                            {`This user hasn't ${type} any projects.`}\n                        </h5>\n                    </div>\n                )\n            }\n            return (\n                <div style={{ marginTop: \"2%\" }}>\n                    <ol>\n                        {\n                            data[type].map((proj, index) => {\n                                return <li key={index}>\n                                    <Link to={`/projects/${proj.creator}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                        {proj.projname}\n                                    </Link>\n                                </li>\n                            })\n                        }\n                    </ol>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        let data = this.state.data;\n        {\n            return data === null ? null :\n                (\n                    <div>\n                        <NavbarComp />\n                        <div style={{ marginTop: \"2%\", display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center' }}>\n                            <div style={{ display: 'inline-block' }}>\n                                <h2>{data.name}</h2>\n                            </div>\n                            <div style={{ display: 'inline-block' }}>\n                                <p>@{data.username}</p>\n                            </div>\n                        </div>\n                        <Container>\n                            <Row>\n                                <Col></Col>\n                                <Col xs={7}>\n                                    <div style={{ alignContent: \"center\" }}>\n                                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                                            <Tab eventKey=\"created\" title=\"Created\">\n                                                {/* <div style ={{textAlign: \"center\"}}><h4>Hi</h4></div> */}\n                                                {this.renderProjects(data, 'created')}\n                                            </Tab>\n                                            <Tab eventKey=\"backed\" title=\"Backed\">\n                                                {this.renderProjects(data, 'backed')}\n                                            </Tab>\n                                            <Tab eventKey=\"following\" title=\"Following\">\n                                                {this.renderProjects(data, 'followed')}\n                                            </Tab>\n                                        </Tabs>\n                                    </div>\n                                </Col>\n                                <Col></Col>\n                            </Row>\n                        </Container>\n\n                    </div>\n                )\n        }\n    }\n}\n\nexport default withRouter(UserProfilePage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tab, Tabs, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\n\nclass ExploreProjectsPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: [],\n            hasSearchedSomething: false,\n            searchString: ''\n        }\n    }\n\n    componentDidMount() {\n        const locationState = this.props.location.state\n        let searchString = null\n        if (locationState !== undefined) {\n            searchString = locationState.searchString\n            console.log(`search for projects containing ${searchString}`)\n        }\n        if (searchString === undefined || searchString === null) {\n            axios.get('http://localhost:3003/api/v1/allProjects')\n                .then(response => {\n                    console.log(response.data);\n                    this.setState({\n                        projectData: response.data\n                    })\n                })\n                .catch(error => {\n                    alert(error)\n                })\n        } else {\n            axios.get(`http://localhost:3003/api/v1/searchProjects/${searchString}`)\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({\n                        projectData: response.data,\n                        hasSearchedSomething: true,\n                        searchString: searchString\n                    })\n                })\n                .catch(error => {\n                    alert(error)\n                })\n        }\n    }\n\n    renderProjectList = (details) => {\n        let renderText = \"There are no projects to see.\"\n        if (details.length === 0 && this.state.hasSearchedSomething) {\n            renderText = `We couldn't find any projects containing the keyphrase \"${this.state.searchString}\".`\n        }\n\n        if (details.length === 0) {\n            var link = <a href=\"/start\">here</a>;\n            return (\n                // <div style={{ display: 'flex', marginTop: \"5%\", flexDirection: \"column \", justifyContent: 'center', alignContent: \"center\" }}>\n                <div style={{ textAlign: \"center\", marginTop: \"5%\"}}>\n                    <div>\n                        <h4>{renderText} </h4>\n                    </div>\n                    <div>\n                        <h4>Click {link} to start a new project!</h4>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div style={{ marginTop: \"3%\" }}>\n                <div style={{ marginLeft: \"20px\" }}>\n                    <h3>Projects: </h3>\n                </div>\n                {/* <ol>\n                    {\n                        details.map((proj, index) => {\n                            return <li key={index}>\n                                <div>\n                                    <Link to={`/projects/${proj.username}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                        {proj.projname}\n                                    </Link>\n                                    <h6>{proj.description}</h6>\n                                    <h6>Creator: {proj.username} </h6>\n                                    <h6>Org: {proj.orgname === '$Independent$'? 'Independent': proj.orgname} </h6>\n                                    <h6>Category: {proj.categories}</h6>\n                                </div>\n                            </li>\n                        })\n                    }\n                </ol> */}\n                <ListGroup>\n                    {\n                        details.map((proj, index) => {\n                            return <ListGroup.Item key={index}>\n                                <div>\n                                    <Link to={`/projects/${proj.username}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                        {proj.projname}\n                                    </Link>\n                                    <h6>{proj.description}</h6>\n                                    <h6>Creator: @{proj.username} </h6>\n                                    <h6>Org: {proj.orgname === '$Independent$' ? 'Independent' : proj.orgname} </h6>\n                                    <h6>Category: {proj.categories}</h6>\n                                </div>\n                            </ListGroup.Item>\n                        })\n                    }\n                </ListGroup>\n            </div>\n        )\n    }\n\n    render() {\n        let details = this.state.projectData\n        return (\n            <div>\n                <NavbarComp />\n                {this.renderProjectList(details)}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ExploreProjectsPage)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport LoginPage from './components/LoginPage/LoginPage'\nimport SignUpPage from './components/SignUpPage/SignUpPage'\nimport StartProjectPage from './components/StartProjectPage/StartProjectPage'\nimport DisplayProjectDetailsPage from './components/DisplayProjectDetailsPage/DisplayProjectDetailsPage'\nimport EditProjectDetailsPage from './components/EditProjectDetailsPage/EditProjectDetailsPage'\nimport FundProjectPage from './components/FundProjectPage/FundProjectPage'\nimport UserProfilePage from './components/UserProfilePage/UserProfilePage'\nimport ExploreProjectsPage from './components/ExploreProjectsPage/ExploreProjectsPage'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst routing = (\n    <Router>\n      <div>\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route path=\"/signup\" component={SignUpPage} />\n            <Route path=\"/start\" component={StartProjectPage} />\n            <Route path=\"/editproject/:username/:orgname/:teamname/:projname\" component={EditProjectDetailsPage} />\n            <Route path=\"/projects/:username/:orgName/:teamName/:projName\" component={DisplayProjectDetailsPage} />\n            <Route path=\"/explore\" component={ExploreProjectsPage} />\n            <Route path=\"/fund/:username/:orgName/:teamName/:projName\" component={FundProjectPage} />\n            <Route path=\"/profile/:username\" component={UserProfilePage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(routing, rootElement);\n} else {\n  ReactDOM.render(routing, rootElement);\n}\n// ReactDOM.render(\n//     routing\n//     , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/books.889937b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game.17cb381f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie.4a2a39c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fundit.377c1788.png\";"],"sourceRoot":""}