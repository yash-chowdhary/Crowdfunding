{"version":3,"sources":["logo.svg","components/AuthHelperMethods.js","components/NavBar/NavBar.js","components/HomePage/HomePage.js","App.js","components/LoginPage/LoginPage.js","components/SignUpPage/SignUpPage.js","components/StartProjectPage/StartProjectPage.js","components/DisplayProjectDetailsPage/DisplayProjectDetailsPage.js","components/EditProjectDetailsPage/EditProjectDetailsPage.js","components/FundProjectPage/FundProjectPage.js","components/UserProfilePage/UserProfilePage.js","components/ExploreProjectsPage/ExploreProjectsPage.js","serviceWorker.js","index.js","images/books.jpg","images/game.jpg","images/movie.jpg","images/fundit.png"],"names":["module","exports","AuthHelperMethods","login","email","password","data","axios","post","then","res","console","log","setToken","token","Promise","resolve","loggedIn","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","logout","removeItem","getTokenData","fetch","url","options","headers","_checkStatus","response","json","status","error","Error","statusText","NavbarComp","props","Auth","window","location","reload","redirectToProfile","userDetails","history","push","pathname","username","loginArea","className","to","Button","variant","tokenData","DropdownButton","id","title","name","Dropdown","Item","onClick","Divider","style","color","marginBottom","Navbar","bg","expand","sticky","Brand","href","src","fundit","alt","width","height","Toggle","aria-controls","Collapse","Nav","Link","this","Component","withRouter","images","books","game","movie","backgroundColor","HomePage","handleUserInput","e","preventDefault","target","value","setState","submitSearch","search","state","searchString","renderCarousel","projects","length","carouselItems","map","project","index","randomImage","Math","floor","random","Carousel","key","orgname","teamname","projname","Caption","description","featuredProjects","validSearch","get","prevProps","prevState","JSON","stringify","isValid","display","justifyContent","margin","Form","inline","textAlign","onSubmit","FormControl","type","placeholder","onChange","event","disabled","alignContent","OverlayTrigger","placement","overlay","Tooltip","fontFamily","LoginPage","form","elements","redirectUrl","alert","catch","passedState","undefined","marginLeft","marginTop","marginRight","Group","role","controlId","Control","SignUpPage","setShow","showState","show","dummy","createUser","confirmPassword","confirmpassword","test","FormGroup","moment","require","StartProjectPage","startProject","team","goal","deadline","category","orgName","about","minamount","benefit","org","trim","parseInt","enteredDate","format","currentDateString","currentDate","isAfter","getCategoryDropdown","optionsList","values","x","as","handleCheckboxChange","oldVal","hideOrg","formInvalid","isValidGoal","isValidAmount","isUnfilled","shouldHideOrg","Container","Row","Col","xs","Label","rows","Check","label","checked","InputGroup","Prepend","Text","aria-describedby","justifyItems","noProjectAbout","DisplayProjectDetailsPage","submitComment","details","projectData","postData","commentor","creator","comment","followUnfollowProject","curUser","follows","delete","curState","follower","withdrawFunding","backer","amount","setTimeout","renderFollowButton","renderText","border","renderWithdrawButton","hasFunded","renderDeleteComment","commentObj","deleteComment","timestamp","renderComments","comments","projectComments","datetime","unix","toDate","Card","Body","Title","Subtitle","renderBenefits","benefits","projectBenefits","benefitObj","redirectToFundPage","backerName","backerUsername","getDaysToDeadline","currentDateObj","tz","deadlineObj","duration","diff","asDays","redirectToEditPage","renderEditProject","renderBackOrStatus","renderProjectData","Object","keys","flexDirection","categories","ProgressBar","curfunds","numbackers","Tabs","defaultActiveKey","Tab","eventKey","validComment","isInvalid","match","params","teamName","projName","followed","found","forEach","proj","backed","EditProjectDetailsPage","redirectToHome","deleteProject","editProject","isValidAbout","FundProjectPage","backProject","pledgeSuccessful","renderOptionOrText","renderFundProjectPage","UserProfilePage","renderProjects","ListGroup","amountfunded","ExploreProjectsPage","renderProjectList","hasSearchedSomething","link","locationState","Boolean","hostname","routing","exact","path","component","App","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.902efc43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import decode from 'jwt-decode';\nimport axios from 'axios';\n\nexport default class AuthHelperMethods {\n    \n    // Initializing important variables\n\n    login = (email, password) => {\n\n        let data = {\n            'email': email,\n            'password': password\n        }\n        \n        // Get a token from api server using the fetch api\n        return axios.post(`https://crowdfunding-2102.herokuapp.com/api/v1/login`, data)\n        .then(res => {\n            console.log(res)\n            this.setToken(res.data.token) // Setting the token in localStorage\n            return Promise.resolve(res);\n        })\n    }\n\n\n    loggedIn = () => {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired = (token) => {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired.\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            console.log(\"expired check failed! Line 42: AuthService.js\");\n            return false;\n        }\n    }\n\n    setToken = (idToken) => {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getTokenData = () => {\n        // Using jwt-decode npm package to decode the token\n        let data = decode(this.getToken());\n        console.log(\"Recieved answer!\");\n        return data;\n    }\n\n    fetch = (url, options) => {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus = (response) => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router } from \"react-router-dom\"\nimport { Navbar, Nav, Button, DropdownButton, Dropdown } from 'react-bootstrap';\nimport fundit from '../../images/fundit.png'\nimport AuthHelperMethods from '../AuthHelperMethods';\n\nclass NavbarComp extends Component {\n\n    constructor(props) {\n        super(props)\n        this.Auth = new AuthHelperMethods();\n        this.token = this.Auth.getToken()\n        \n    }\n\n    logout = () => {\n        this.Auth.logout();\n        window.location.reload();\n    }\n\n    redirectToProfile = () => {\n        const userDetails = this.Auth.getTokenData()\n        this.props.history.push({\n            pathname: `/profile/${userDetails.username}`\n        })\n    }\n\n    loginArea = () => {\n        if (this.token === null) {\n            return (\n                <div className=\"login\">\n                    <Link to=\"/login\"><Button variant=\"outline-secondary\">Login</Button></Link>\n                    &nbsp;\n                    &nbsp;\n                <Link to=\"/signup\"><Button variant=\"outline-secondary\">Sign Up</Button></Link>\n                </div>\n            )\n        } else {\n            let tokenData = this.Auth.getTokenData();\n\n            console.log(tokenData)\n            return (\n                <DropdownButton id=\"dropdown-basic-button\" title={tokenData.name} variant=\"secondary\" >\n                    <Dropdown.Item onClick={this.redirectToProfile}>Profile</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={this.logout}>\n                        <p style={{ color: \"red\", marginBottom: \"0px\" }}>Logout</p>\n                    </Dropdown.Item>\n                </DropdownButton >\n            )\n        }\n    }\n\n    render() {\n        return (\n            // <div>\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\" >\n                    <Navbar.Brand href=\"/\"><img src={fundit} alt=\"FundIt Logo\"\n                        style={{ width: 120, height: 37 }}\n                    /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/explore\">Explore</Nav.Link>\n                            <Nav.Link href=\"/start\">Start a Project</Nav.Link>\n                        </Nav>\n                        {this.loginArea()}\n                    </Navbar.Collapse>\n                </Navbar>\n\n            // </div>\n        )\n    }\n};\n\nexport default withRouter(NavbarComp);","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tooltip, OverlayTrigger, Carousel, Form, FormControl, Button } from 'react-bootstrap';\nimport './HomePage.css'\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\nimport game from '../../images/game.jpg'\nimport movie from '../../images/movie.jpg'\n\nconst images = [books, game, movie]\n\nconst Divider = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.1\n        }}\n    />\n);\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            featuredProjects: [],\n            search: '',\n            validSearch: false\n        }\n    }\n\n    componentDidMount() {\n        // axios.get('https://crowdfunding-2102.herokuapp.com/api/v1/getFeaturedProjects')\n        axios.get('https://crowdfunding-2102.herokuapp.com/api/v1/getFeaturedProjects')\n            .then(response => {\n                let data = response.data\n                console.log(data)\n                this.setState({\n                    featuredProjects: data\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { search } = this.state\n            let isValid = !(search === '')\n            this.setState({\n                validSearch: isValid\n            })\n        }\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    submitSearch = () => {\n        const { search } = this.state\n        this.props.history.push({\n            pathname: `/explore`,\n            state: { searchString: search }\n        })\n    }\n\n    renderCarousel = (projects) => {\n        console.log('rendering carousel');\n        console.log(projects.length);\n        let carouselItems = projects.map((project, index) => {\n            let randomImage = Math.floor(Math.random() * 3)\n            console.log(randomImage);\n            return (\n                <Carousel.Item key={index}>\n                    <Link to={`/projects/${project.username}/${project.orgname}/${project.teamname}/${project.projname}`}>\n                        <img\n                            src={images[randomImage]}\n                            alt=\"img\"\n                            style={{ width: 850, height: 500 }}\n                        />\n                        <Carousel.Caption>\n                            <h3>{project.projname}</h3>\n                            <p>{project.description}</p>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            )\n        })\n        return (\n            <Carousel>\n                {carouselItems}\n            </Carousel >\n        )\n    }\n\n    render() {\n        let projects = this.state.featuredProjects\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ display: 'flex', justifyContent: 'center', margin: \"10px\" }}>\n                    <Form inline style={{ textAlign: \"center\" }} onSubmit={this.submitSearch}>\n                        <FormControl type=\"text\" placeholder=\"Search\" name=\"search\" className=\"mr-sm-2\" onChange={(event) => this.handleUserInput(event)}/>\n                        <Button variant=\"outline-success\"  type=\"submit\" disabled={!this.state.validSearch}>Search</Button>\n                    </Form>\n                </div>\n                <Divider color=\"gray\" />\n                <div style={{ display: 'flex', justifyContent: \"center\", alignContent: \"center\" }}>\n                    <OverlayTrigger\n                        key=\"right\"\n                        placement=\"right\"\n                        overlay={\n                            <Tooltip id=\"tooltip-right\">\n                                Projects that have been funded the most\n                        </Tooltip>\n                        }\n                    >\n                        <p style={{ color: \"gray\", fontFamily: \"sans-serif\" }} > Featured Projects </p>\n\n                    </OverlayTrigger>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <div\n                        style={{\n                            margin: \"5px\",\n                            textAlign: \"center\", width: \"850px\",\n                            display: \"inline-block\"\n                        }}\n                    >\n                        {this.renderCarousel(projects)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(HomePage);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage'\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <HomePage />\n  );\n}\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom'\nimport { Form, Button} from \"react-bootstrap\"\nimport NavbarComp from '../NavBar/NavBar'\nimport './LoginPage.css'\nimport AuthHelperMethods from '../AuthHelperMethods';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirectUrl: \"/\"\n        }\n    }\n\n    Auth = new AuthHelperMethods();\n\n    login = (event) => {\n        event.preventDefault()\n\n        let form = event.target;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n\n        console.log(`Attempting login with ${email} and ${password}`);\n        console.log(`Redirecting to ${this.state.redirectUrl}`);\n        \n        this.Auth.login(email, password)\n            .then(res => {\n                if (res === false) {\n                    return alert(\"Invalid Credentials!\");\n                }\n                this.props.history.push(this.state.redirectUrl);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"Invalid Credentials!\");\n            })\n\n    }\n\n    componentDidMount() {\n        const passedState = this.props.location.state\n        if (passedState !== undefined && passedState !== null) {\n            this.setState({\n                redirectUrl: passedState.redirectUrl\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ marginLeft: \"35%\", marginTop: \"10%\", marginRight: \"35%\" }}>\n                    <h3> Log In </h3>\n                    <Form onSubmit={this.login}>\n                        <Form.Group role=\"form\">\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n                            </Form.Group>\n                            <Button style={{ marginLeft: \"40%\" }} variant=\"primary\" type=\"submit\">\n                                Login\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                    <p style={{ textAlign: \"center\", marginTop: \"5px\" }}>\n                        Don't have an account? <Link to=\"/signup\">Sign Up </Link>\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LoginPage);\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter, Link } from 'react-router-dom'\nimport { Form, Button, Container, Row, Toast, FormGroup } from \"react-bootstrap\"\nimport NavbarComp from '../NavBar/NavBar'\nimport { Redirect } from 'react-router'\n\nclass SignUpPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            data: undefined,\n            show: false\n        }\n    }\n\n    setShow = (showState) => {\n        this.setState({\n            show: showState\n        })\n    }\n\n    dummy = () => {\n        console.log(\"test\")\n    }\n\n    createUser = (event) => {\n        event.preventDefault();\n\n        let form = event.target;\n        const name = form.elements.name.value;\n        const username = form.elements.username.value;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n        const confirmPassword = form.elements.confirmpassword.value;\n\n        var re = /^\\w+$/;\n        if (password.length < 6) {\n            alert(\"Password must be at least 6 characters\")\n        } else if (password !== confirmPassword) {\n            alert(\"Passwords don't match!\")\n        } else if (!re.test(username)) {\n            alert(\"Username must only contain letters, numbers and underscore(s)\\ne.g. new_user123\")\n        }\n        else {\n            const data = {\n                'username': username,\n                'name': name,\n                'email': email,\n                'password': password\n            }\n\n            console.log(data)\n            axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/signup', data)\n                .then((response) => {\n                    this.props.history.push(\"/login\")\n\n                })\n                .catch(error => {\n                    console.log(error)\n                    alert(\"User with the same email already exists!\")\n                });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavbarComp />\n                <div style={{ marginLeft: \"35%\", marginTop: \"10%\", marginRight: \"35%\" }}>\n                    <h3> Sign Up </h3>\n                    <Form onSubmit={this.createUser}>\n                        <FormGroup role=\"form\">\n                            <Form.Group controlId=\"formBasicName\">\n                                <Form.Control type=\"name\" placeholder=\"Name\" name=\"name\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicName\">\n                                <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmpassword\" />\n                            </Form.Group>\n                            <Button style={{ marginLeft: \"40%\", }} variant=\"primary\" type=\"submit\">\n                                Sign Up\n                         </Button>\n                        </FormGroup>\n                    </Form>\n                    <p style={{ textAlign: \"center\", marginTop: \"5px\" }}>\n                        Already have an account? <Link to=\"/login\">Login</Link>\n                    </p>\n                    {/* <Toast onClose={() => this.setShow(false)} show={this.state.show} delay={3000} autohide>\n                        <Toast.Body>Unable to sign up! {this.state.errorMessage}</Toast.Body>\n                    </Toast> */}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default withRouter(SignUpPage);\n\n\n\n","import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { Link, BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { Container, Row, Col, Form, FormControl, Button, InputGroup } from 'react-bootstrap';\nimport NavbarComp from '../NavBar/NavBar'\nimport AuthHelperMethods from '../AuthHelperMethods';\nvar moment = require('moment')\n\nclass StartProjectPage extends Component {\n    Auth = new AuthHelperMethods()\n    constructor(props) {\n        super(props)\n        this.state = {\n            values: [],\n            category: 'Art',\n            title: '',\n            description: '',\n            about: '',\n            team: '',\n            goal: '',\n            deadline: '',\n            minamount: '',\n            benefit: '',\n            orgName: null,\n            formInvalid: true,\n            hideOrg: true\n        }\n    }\n\n    startProject = (e) => {\n        e.preventDefault()\n        console.log(this.state);\n\n        const { team, title, description, goal, deadline, category, orgName, about, minamount, benefit } = this.state;\n        let tokenData = this.Auth.getTokenData()\n\n        let org = orgName === null ? '$Independent$' : orgName.trim()\n        let data = {\n            'team': team.trim(),\n            'title': title.trim(),\n            'category': category,\n            'description': description.trim(),\n            'about': about.trim(),\n            'minamount': parseInt(minamount),\n            'benefit': benefit,\n            'goal': parseInt(goal),\n            'deadline': deadline,\n            'username': tokenData.username,\n            'orgName': org\n        }\n\n        let enteredDate = moment(this.state.deadline).format(\"YYYY-MM-DD\")\n        let currentDateString = moment().get('year') + \"-\" + (moment().get('month') + 1) + \"-\" + moment().get('date');\n        let currentDate = moment(currentDateString).format(\"YYYY-MM-DD\")\n\n        let isAfter = moment(enteredDate).isAfter(currentDate)\n\n        if (!isAfter) {\n            alert(`Please enter a date in the future, i.e. after ${moment(currentDate).format(\"DD-MM-YYYY\")}`)\n            return\n        }\n        axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/start', data)\n            .then((response) => {\n                // let details  = {\n                //     username: tokenData.username,\n                //     orgname: org,\n                //     teamname: team,\n                //     projname: title\n                // }\n                this.props.history.push({\n                    pathname: `/editproject/${tokenData.username}/${org}/${team}/${title}`,\n                })\n            })\n            .catch((error) => {\n                console.log(error.response.data)\n                alert(error.response.data)\n            })\n\n    }\n\n    componentDidMount() {\n        axios.get('https://crowdfunding-2102.herokuapp.com/api/v1/categories')\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    values: response.data,\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    getCategoryDropdown = () => {\n        let values = this.state.values;\n        let optionsList = values.map((x, index) => <option key={index}>{x.category}</option>)\n        return (\n            <Form.Control as=\"select\" name=\"category\">\n                {optionsList}\n            </Form.Control >\n        )\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n        console.log(this.state);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { title, description, team, deadline, goal, hideOrg, orgName, benefit, minamount } = this.state\n            let isValidGoal = parseInt(goal) > 0 ? true : false;\n            let isValidAmount = parseInt(minamount) > 0 ? true : false;\n            let isUnfilled = title == '' || description == '' || team == '' || deadline == '' || goal == '' || (!hideOrg && orgName === null) || !(isValidGoal) || !(isValidAmount) || minamount == '' || benefit == ''\n            this.setState({\n                formInvalid: isUnfilled\n            })\n        }\n\n    }\n\n    handleCheckboxChange = (e) => {\n        let oldVal = this.state.hideOrg;\n        this.setState({\n            hideOrg: !oldVal\n        })\n\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            // this.props.history.replace('/login')\n            this.props.history.push({\n                pathname: '/login',\n                state: { redirectUrl: \"/start\" }\n            })\n        }\n        const shouldHideOrg = this.state.hideOrg;\n        console.log(shouldHideOrg);\n\n        return (\n            <div>\n                <NavbarComp />\n                <h2 style={{ marginTop: \"2%\", textAlign: \"center\", fontFamily: \"courier\" }}> Let's get you started. </h2>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col xs={7}>\n                            <Form onSubmit={this.startProject} style={{ marginBottom: \"5%\" }}>\n                                <Form.Group onChange={(event) => this.handleUserInput(event)}>\n                                    <Form.Label>Project Category *</Form.Label>\n                                    {this.getCategoryDropdown()}\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Title *</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"1\" name=\"title\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Title that catches the eye of the reader.\" />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Description *</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"1\" name=\"description\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"A one-line description of your project.\" />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>About</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"5\" name=\"about\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Tell us more - the inspiration, the obstacles, and the novel idea. Let people know why YOUR project deserves to be funded.\" />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Project Team *</Form.Label>\n                                    <Form.Control type=\"text\" name=\"team\" placeholder=\"Your project team name\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Organization *</Form.Label>\n                                    <Form.Check style={{ marginBottom: \"4px\" }}\n                                        type=\"checkbox\"\n                                        id=\"orgCheck\"\n                                        label=\"Independent Project\"\n                                        onChange={this.handleCheckboxChange}\n                                        checked={this.state.hideOrg}\n                                    />\n                                    {\n                                        !this.state.hideOrg\n                                            ? (<Form.Control type=\"text\" name=\"orgName\" placeholder=\"Parent organization\" onChange={(event) => this.handleUserInput(event)} />)\n                                            : null\n                                    }\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Funding goal amount (S$) *</Form.Label>\n                                    <Form.Control type=\"number\" name=\"goal\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Group >\n                                    <Form.Label>Funding deadline *</Form.Label>\n                                    <Form.Control type=\"date\" name=\"deadline\" onChange={(event) => this.handleUserInput(event)} />\n                                </Form.Group>\n                                <Form.Label>Benefit *</Form.Label>\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon3\">\n                                            Min. amount (S$)\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control name=\"minamount\" type=\"number\" aria-describedby=\"basic-addon3\" onChange={(event) => this.handleUserInput(event)} />\n                                </InputGroup>\n\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon3\">\n                                            Benefit\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control name=\"benefit\" type=\"text\" aria-describedby=\"basic-addon3\" onChange={(event) => this.handleUserInput(event)} />\n                                </InputGroup>\n\n                                <div style={{ textAlign: \"center\" }}>\n                                    <Button style={{ justifyItems: \"center\" }} variant=\"dark\" type=\"submit\" disabled={this.state.formInvalid}>\n                                        Create Project\n                                    </Button>\n                                </div>\n\n                            </Form>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(StartProjectPage)\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\"\nimport { Container, Row, Col, Button, ProgressBar, Tab, Tabs, Form, Card } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\nimport game from '../../images/game.jpg'\nimport movie from '../../images/movie.jpg'\nimport './DisplayProjectDetailsPage.css'\nvar moment = require('moment-timezone');\n\nconst images = [books, game, movie]\n\nconst Divider = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.1\n        }}\n    />\n);\n\nconst noProjectAbout = 'The creator hasn\\'t provided a detailed description of this project.'\n\nclass DisplayProjectDetailsPage extends Component {\n    Auth = new AuthHelperMethods()\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projectData: null,\n            follows: false,\n            hasFunded: false,\n            validComment: false,\n            comment: '',\n            projectComments: [],\n            projectBenefits: []\n        }\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value });\n    }\n\n    submitComment = () => {\n        let details = this.state.projectData\n\n        let postData = {\n            commentor: this.Auth.getTokenData().username,\n            creator: details.username,\n            orgname: details.orgname,\n            teamname: details.teamname,\n            projname: details.projname,\n            comment: this.state.comment\n        }\n        axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/comment', postData)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(`/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n            })\n            .catch(error => {\n                console.log(error.response.data);\n                alert(error.response.data)\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { comment } = this.state\n            let isInvalid = comment == ''\n            this.setState({\n                validComment: !isInvalid\n            })\n        }\n    }\n\n    async componentDidMount() {\n        console.log('back here at display project page')\n        if (!this.Auth.loggedIn()) { return }\n        let curUser = this.Auth.getTokenData().username;\n        const { username, orgName, teamName, projName } = this.props.match.params\n\n\n        axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/user/${curUser}`)\n            .then(response => {\n                let data = response.data\n                console.log('user data:')\n                console.log(data.followed);\n\n                let found = false\n                let hasFunded = false\n                data.followed.forEach(proj => {\n                    if (proj.creator === username\n                        && proj.orgname === orgName && proj.teamname === teamName && proj.projname === projName) {\n                        found = true\n                    }\n                })\n                data.backed.forEach(proj => {\n                    if (proj.creator === username\n                        && proj.orgname === orgName && proj.teamname === teamName && proj.projname === projName) {\n                        hasFunded = true\n                    }\n                })\n                if (found) {\n                    console.log('Setting follows to true');\n                    this.setState({\n                        follows: found\n                    })\n                }\n                if (hasFunded) {\n                    console.log('Setting hasFunded to true');\n                    this.setState({\n                        hasFunded: hasFunded\n                    })\n                }\n            })\n\n        console.log(`https://crowdfunding-2102.herokuapp.com/api/v1/projects/${username}/${orgName}/${teamName}/${projName}`);\n\n        var postData = null\n        axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/projects/${username}/${orgName}/${teamName}/${projName}`)\n            .then((response) => {\n                console.log((response.data));\n                let data = response.data;\n                let daysToDeadline = this.getDaysToDeadline(data)\n                if (daysToDeadline <= 0 && data.status === 'In Progress') {\n                    console.log('changing status');\n                    if (data.curfunds < data.goal) {\n                        data.status = 'Abandoned'\n                    } else {\n                        data.status = 'Complete'\n                    }\n                    // set the status\n                    postData = {\n                        username: username,\n                        orgname: orgName,\n                        teamname: teamName,\n                        projname: projName,\n                        status: data.status\n                    }\n                }\n                console.log(data.status);\n                this.setState({\n                    projectData: data\n                })\n                if (postData !== null) {\n                    return axios.post(`https://crowdfunding-2102.herokuapp.com/api/v1/setStatus`, postData)\n                }\n            })\n            .then(response => {\n                console.log('status changed');\n            })\n            .catch(error => {\n                alert(error)\n            })\n\n        axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/comments/${username}/${orgName}/${teamName}/${projName}`)\n            .then(response => {\n                let comments = response.data\n                this.setState({\n                    projectComments: comments\n                })\n            })\n            .catch(error => {\n                alert(error)\n            })\n\n        axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/benefits/${username}/${orgName}/${teamName}/${projName}`)\n            .then(response => {\n                let benefits = response.data\n                this.setState({\n                    projectBenefits: benefits\n                })\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    followUnfollowProject = () => {\n        let data = this.state.projectData;\n        let curUser = this.Auth.getTokenData().username;\n        if (this.state.follows) {\n            axios.delete(`https://crowdfunding-2102.herokuapp.com/api/v1/follow/${curUser}/${data.username}/${data.orgname}/${data.teamname}/${data.projname}`)\n                .then(response => {\n                    console.log('unfollowed');\n                    let curState = this.state.follows\n                    this.setState({\n                        follows: !curState\n                    })\n                })\n                .catch(error => {\n                    console.log('error');\n                })\n        } else {\n            let postData = {\n                follower: curUser,\n                creator: data.username,\n                orgname: data.orgname,\n                teamname: data.teamname,\n                projname: data.projname\n            }\n            axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/follow', postData)\n                .then(response => {\n                    console.log('followed');\n                    let curState = this.state.follows\n                    this.setState({\n                        follows: !curState\n                    })\n                })\n                .catch(error => {\n                    console.log('error');\n                })\n        }\n    }\n\n    withdrawFunding = () => {\n        let data = this.state.projectData;\n        let curUser = this.Auth.getTokenData().username;\n        let postData = {\n            backer: curUser,\n            creator: data.username,\n            orgname: data.orgname,\n            teamname: data.teamname,\n            projname: data.projname\n        }\n        axios.post(`https://crowdfunding-2102.herokuapp.com/api/v1/withdraw`, postData)\n            .then(response => {\n                console.log(response.data);\n                console.log(response.data.amount);\n                alert(`You have withdrawn S$ ${response.data.amount} from this project`)\n\n                setTimeout(() => {\n                    window.location.reload()\n                }, 1000)\n\n            })\n            .catch(error => {\n                alert(`Error!`)\n            })\n    }\n\n    renderFollowButton = (details) => {\n        let curUser = this.Auth.getTokenData().username;\n        let renderText = \"Follow\"\n        if (this.state.follows) {\n            renderText = \"Unfollow\"\n        }\n        console.log(curUser);\n        console.log(details.username);\n\n        if (curUser === details.username) {\n            return null;\n        } else {\n            return (\n                <Button style={{ width: \"100%\", border: \"1px solid black\", marginTop: \"2%\" }} variant=\"Light\" onClick={this.followUnfollowProject}>\n                    {renderText}\n                </Button>\n            )\n        }\n    }\n\n    renderWithdrawButton = (details) => {\n        let curUser = this.Auth.getTokenData().username;\n        let renderText = \"Withdraw Funding\"\n        if (!this.state.hasFunded) {\n            return null;\n        }\n        return (\n            <Button style={{ width: \"100%\", marginTop: \"2%\" }} variant=\"danger\" onClick={this.withdrawFunding}>\n                {renderText}\n            </Button>\n        )\n    }\n\n    renderDeleteComment = (commentObj) => {\n        if (commentObj.commentor === this.Auth.getTokenData().username) {\n            return (<Button variant=\"danger\" onClick={() => this.deleteComment(commentObj)}>\n                Delete\n            </Button>)\n        }\n    }\n\n    deleteComment = (commentObj) => {\n        axios.delete(`https://crowdfunding-2102.herokuapp.com/api/v1/comment/${commentObj.commentor}/${commentObj.timestamp}`)\n            .then(response => {\n                console.log(response.data);\n                window.location.reload()\n            })\n            .catch(error => {\n                alert(error.response.data)\n            })\n    }\n\n    renderComments = () => {\n        let comments = this.state.projectComments;\n        return (\n            <div style={{ marginTop: \"2%\" }}>\n                {\n                    comments.map((commentObj, index) => {\n                        const datetime = moment(moment.unix(commentObj.timestamp).toDate()).format('MMM Do YYYY, hh:mm a')\n                        console.log(datetime);\n\n                        return <Card style={{ marginTop: \"1%\" }} key={index}>\n                            <Card.Body>\n                                <Card.Title>@{commentObj.commentor}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">{datetime}</Card.Subtitle>\n                                <Card.Body>\n                                    {commentObj.comment}\n                                </Card.Body>\n                                {this.renderDeleteComment(commentObj)}\n                            </Card.Body>\n                        </Card>\n                    })\n                }\n            </div>\n        )\n    }\n\n    renderBenefits = () => {\n        let benefits = this.state.projectBenefits;\n        return (\n            <div style={{ marginTop: \"2%\" }}>\n                {\n                    benefits.map((benefitObj, index) => {\n                        return <Card style={{ marginTop: \"1%\" }} key={index}>\n                            <Card.Body>\n                                <Card.Title>Pledge above S$ {benefitObj.minamount}</Card.Title>\n                                <Card.Text>\n                                    Benefit: {benefitObj.benefit}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    })\n                }\n            </div>\n        )\n    }\n\n    redirectToFundPage = () => {\n        const details = this.state.projectData\n        details.backerName = this.Auth.getTokenData().name;\n        details.backerUsername = this.Auth.getTokenData().username;\n        this.props.history.push({\n            pathname: `/fund/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`,\n            state: { data: details }\n        })\n    }\n\n    getDaysToDeadline = (details) => {\n        let currentDateString = moment().get('year') + \"-\" + (moment().get('month') + 1) + \"-\" + moment().get('date');\n        let currentDateObj = moment(currentDateString).tz(\"Asia/Singapore\")\n\n        var deadlineObj = moment(details.deadline).tz(\"Asia/Singapore\")\n        console.log('herererererer')\n        console.log(`days: ${Math.floor(moment.duration(deadlineObj.diff(currentDateObj)).asDays())}`);\n\n        return Math.floor(moment.duration(deadlineObj.diff(currentDateObj)).asDays());\n    }\n\n    redirectToEditPage = (details) => {\n        this.props.history.push({\n            pathname: `/editproject/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`,\n            // state: { data: details }\n        })\n    }\n\n    renderEditProject = (details) => {\n        let curUser = this.Auth.getTokenData().username\n        if (details.username !== curUser) {\n            return null\n        }\n        return <Button style={{ width: \"100%\" }} variant=\"primary\" onClick={() => this.redirectToEditPage(details)}>\n            Edit Project\n        </Button>\n    }\n\n    renderBackOrStatus = (details) => {\n        console.log(details.status);\n\n        if (details.status === 'In Progress') {\n            return (\n                <div>\n                    <div className=\"div-stats\">\n                        <h3 className=\"generic-h3-stats\">{this.getDaysToDeadline(details)} </h3>\n                        <p className=\"generic-p-stats\">day{this.getDaysToDeadline(details) > 1 ? 's' : null} to go</p>\n                    </div>\n\n                    {this.renderEditProject(details)}\n                    <Button style={{ width: \"100%\", marginTop: \"2%\" }} variant=\"success\" type=\"submit\" onClick={this.redirectToFundPage}>\n                        Back this project\n                    </Button>\n                    {this.renderWithdrawButton(details)}\n                    {this.renderFollowButton(details)}\n                </div>\n            )\n        } else if (details.status === 'Complete') {\n            return (\n                <div>\n                    <h3 className=\"h3-complete\">Project Funding Complete!</h3>\n                </div>\n            )\n        } else {\n\n            return (\n                <div>\n                    <h3 className=\"h3-abandoned\">Project Funding Abandoned!</h3>\n                </div>\n            )\n        }\n    }\n\n    renderProjectData = () => {\n        if (this.state.projectData == null || Object.keys(this.state.projectData).length == 0) {\n            return null;\n        }\n        let details = this.state.projectData;\n        let randomImage = Math.floor(Math.random() * 3)\n        return (\n            <div style={{ marginTop: \"1%\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>{details.projname}</h2>\n                    <h5>{details.description}</h5>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignContent: \"center\" }}>\n                        <h6>Creator: @{details.username}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Org: {details.orgname === '$Independent$' ? `Independent` : details.orgname}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Team: {details.teamname}</h6>\n                        &nbsp;\n                        &nbsp;\n                        <h6>Category: {details.categories}</h6>\n                    </div>\n                </div>\n                <Container style={{ marginTop: \"3%\" }}>\n                    <Row>\n                        <Col >\n                            <img\n                                src={images[randomImage]}\n                                alt=\"img\"\n                                style={{ width: 750, height: 450 }}\n                            />\n                        </Col>\n                        <Col>\n                            <ProgressBar variant=\"success\" now={(details.curfunds / details.goal) * 100} />\n                            <div>\n                                <div style={{ marginBottom: \"3%\" }}>\n                                    <div className=\"div-stats\">\n                                        <h3 className=\"curfunds\">S$ {details.curfunds} </h3>\n                                        <p className=\"goal\">pledged of S$ {details.goal} goal </p>\n                                    </div>\n\n                                    <div className=\"div-stats\">\n                                        <h3 className=\"generic-h3-stats\">{details.numbackers} </h3>\n                                        <p className=\"generic-p-stats\">backer{details.numbackers > 1 ? 's' : null} </p>\n                                    </div>\n                                    {this.renderBackOrStatus(details)}\n                                </div>\n                                <div style={{ marginTop: \"2%\" }}>\n                                    <p className=\"p-fineprint\">\n                                        All or nothing funding. This project will only be funded if it reaches its goal by {moment(details.deadline).format(\"dddd, MMMM Do YYYY\")} 0000 hrs SGT.\n                                    </p>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container style={{marginBottom:\"5%\"}}>\n                    <Row>\n                        <Col>\n                            <Divider color=\"gray\" />\n                            <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\n                                <Tab eventKey=\"about\" title=\"About\">\n                                    {/* <div style ={{textAlign: \"center\"}}><h4>Hi</h4></div> */}\n                                    <div style={{ marginTop: \"3%\" }}>\n                                        <p>{this.state.projectData.about === null ? noProjectAbout : this.state.projectData.about}</p>\n                                    </div>\n                                </Tab>\n                                <Tab eventKey=\"benefits\" title=\"Benefits\">\n                                    {this.renderBenefits()}\n                                </Tab>\n                                <Tab eventKey=\"comments\" title=\"Comments\">\n                                    <div style={{ marginTop: \"2%\", display: 'flex', flexDirection: \"column\" }}>\n                                        <Form onSubmit={this.submitComment}>\n                                            <Form.Group >\n                                                <Form.Control as=\"textarea\" rows=\"3\" name=\"comment\" onChange={(event) => this.handleUserInput(event)}\n                                                    placeholder=\"Type your comment here.\" />\n                                            </Form.Group>\n                                            <Button style={{ justifyItems: \"center\" }} variant=\"dark\" type=\"submit\" disabled={!this.state.validComment}>\n                                                Comment\n                                            </Button>\n                                        </Form>\n                                        {this.renderComments()}\n                                    </div>\n                                    {/* {this.renderProjects(data, 'followed')} */}\n                                </Tab>\n                            </Tabs>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            console.log('redirecting to login page');\n\n            const { username, orgName, teamName, projName } = this.props.match.params\n            this.props.history.push({\n                pathname: '/login',\n                state: { redirectUrl: `/projects/${username}/${orgName}/${teamName}/${projName}` }\n            })\n        }\n        return (\n            <div>\n                <NavbarComp />\n                {this.renderProjectData()}\n            </div>\n\n        )\n    }\n}\n\nexport default withRouter(DisplayProjectDetailsPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\"\nimport { Container, Row, Col, Button, ProgressBar, Tab, Tabs, Form, Card } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nvar moment = require('moment-timezone');\n\nclass EditProjectDetailsPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: null,\n            isValidAbout: false,\n            about: ''\n        }\n    }\n\n    componentDidMount() {\n        const { username, orgname, teamname, projname } = this.props.match.params\n        console.log(this.props.match.params);\n\n        let details = {\n            username: username,\n            orgname: orgname,\n            teamname: teamname,\n            projname: projname\n        }\n        this.setState({\n            projectData: details\n        })\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { about } = this.state\n            let isValid = !(about === '')\n            this.setState({\n                isValidAbout: isValid\n            })\n        }\n    }\n\n    redirectToHome = () => {\n        console.log('redirecting to home')\n        this.props.history.push('/')\n    }\n\n    deleteProject = (details) => {\n        axios.delete(`https://crowdfunding-2102.herokuapp.com/api/v1/project/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n            .then(response => {\n                alert('Project deleted. Redirecting you to the home page')\n                this.redirectToHome()\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    editProject = () => {\n        let details = this.state.projectData;\n        let postData = {\n            username: details.username,\n            orgname: details.orgname,\n            teamname: details.teamname,\n            projname: details.projname,\n            about: this.state.about\n        }\n        axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/editProject', postData)\n            .then(response => {\n                console.log('updated!');\n                alert('Project edited. Redirecting you to the project details page')\n                this.props.history.push(`/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`)\n                // this.props.history.push('/')\n            })\n            .catch(error => {\n                alert(error)\n            })\n    }\n\n    render() {\n        let details = this.state.projectData\n        if (details === null) {\n            return null;\n        }\n        return (\n            <div>\n                <NavbarComp />\n                <h2 style={{ marginTop: \"2%\", textAlign: \"center\", fontFamily: \"courier\" }}> Edit '{this.state.projectData.projname}'</h2>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col xs={7}>\n                            <Form>\n                                <Form.Group >\n                                    <Form.Label>About</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"5\" name=\"about\" onChange={(event) => this.handleUserInput(event)}\n                                        placeholder=\"Talk more about your project (eg. the inspiration, the obstacles, and the novel idea)\" />\n                                </Form.Group>\n                                <div style={{ textAlign: \"center\" }}>\n                                    <Button style={{ justifyItems: \"center\" }} variant=\"success\" onClick={this.editProject} disabled={!this.state.isValidAbout}>\n                                        Save\n                                    </Button>\n                                    <Button style={{ justifyItems: \"center\", marginLeft: \"2%\" }} variant=\"danger\" onClick={() => this.deleteProject(details)}>\n                                        Delete Project\n                                    </Button>\n                                </div>\n                            </Form>\n                            <div style={{ textAlign: \"center\" }}>\n                                <Button style={{ justifyItems: \"center\", marginTop: \"5%\" }} variant=\"link\" onClick={() => this.redirectToHome()}>\n                                    Back to Home\n                                </Button>\n                            </div>\n\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditProjectDetailsPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Container, Row, Col, Button, Form, FormGroup } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\nimport books from '../../images/books.jpg'\n\nclass FundProjectPage extends Component {\n    Auth = new AuthHelperMethods()\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: null,\n            amount: 0,\n            disabled: true,\n            pledgeSuccessful: false\n        }\n    }\n\n    componentDidMount() {\n        const details = this.props.location.state.data\n        console.log(\"at the funding page!!\")\n        console.log(details)\n        this.setState({\n            projectData: details\n        })\n    }\n\n    handleUserInput = (e) => {\n        e.preventDefault()\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log(`output: ${name} ${value}`);\n        this.setState({ [name]: value });\n    }\n\n    backProject = () => {\n        let data = {\n            amount: parseInt(this.state.amount),\n            backer: this.state.projectData.backerUsername,\n            creator: this.state.projectData.username,\n            orgname: this.state.projectData.orgname,\n            teamname: this.state.projectData.teamname,\n            projname: this.state.projectData.projname\n        }\n\n        axios.post('https://crowdfunding-2102.herokuapp.com/api/v1/fund', data)\n            .then(response => {\n                let details = this.state.projectData\n                console.log(response)\n                console.log('success!!')\n                this.setState({\n                    pledgeSuccessful: true\n                })\n\n                setTimeout(() => {\n                    this.props.history.push({\n                        pathname: `/projects/${details.username}/${details.orgname}/${details.teamname}/${details.projname}`\n                    })\n                }, 3000)\n\n\n            })\n            .catch(error => {\n                console.log(error)\n                console.log('error!!')\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n            const { amount } = this.state\n            let isValidAmount = parseInt(amount) > 0 ? true : false;\n            this.setState({\n                disabled: !isValidAmount\n            })\n        }\n    }\n\n    renderOptionOrText = (details) => {\n        if (this.state.pledgeSuccessful) {\n            return (\n                <div style={{ marginTop: \"2%\", display: 'flex', flexDirection:'column', justifyContent: 'center', textAlign: 'center'}}>\n                    <div style={{display: 'inline-block'}}>\n                        <h5>Thank you for your generosity, {details.backerName}!</h5>\n                    </div>\n                    <div style={{display: 'inline-block'}}>\n                        <p>Redirecting you to the {details.projname} project page...</p>\n                    </div>\n                </div>\n\n\n            )\n        } else {\n            return (\n                <div style={{ marginTop: \"2%\", display: 'flex', justifyContent: 'center' }}>\n                    <Form>\n                        <FormGroup role=\"form\">\n                            <Form.Group>\n                                <Form.Control type=\"number\" placeholder=\"Pledge Amount (S$)\" name=\"amount\" onChange={this.handleUserInput} />\n                            </Form.Group>\n                        </FormGroup>\n                    </Form>\n                    <Button style={{ marginLeft: \"1%\", height: \"40%\" }} variant=\"success\" disabled={this.state.disabled} onClick={this.backProject}>\n                        Pledge\n                    </Button>\n                </div>\n            )\n        }\n\n    }\n\n    renderFundProjectPage = (details) => {\n        return (\n            <div style={{ marginTop: \"1%\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>{details.projname}</h2>\n                    <h5>{details.description}</h5>\n                </div>\n                {this.renderOptionOrText(details)}\n\n            </div>)\n    }\n\n    render() {\n        if (!this.Auth.loggedIn()) {\n            if (this.state.projectData !== null || this.state.projectData !== undefined) {\n                const details = this.state.projectData\n                this.props.history.push({\n                    pathname: '/login',\n                    state: { redirectUrl: `/fund/${details.username}/${details.orgname}/${details.teamname}/${details.projname}` }\n                })\n            }\n        }\n        let details = this.state.projectData;\n        return (\n            <div>\n                <NavbarComp />\n                {(details == null || Object.keys(details).length == 0) ? null : this.renderFundProjectPage(details)}\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(FundProjectPage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tab, Tabs, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\n\nclass UserProfilePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            data: null\n        }\n    }\n\n    componentDidMount() {\n        console.log('mounted');\n        const { username } = this.props.match.params\n\n        axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/user/${username}`)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    data: response.data\n                })\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    }\n\n    renderProjects = (data, type) => {\n        if (data !== null) {\n            if (data[type].length === 0) {\n                return (\n                    <div style={{ textAlign: \"center\", marginTop: \"2%\" }}>\n                        <h5>\n                            {`This user hasn't ${type} any projects.`}\n                        </h5>\n                    </div>\n                )\n            }\n            return (\n                <div style={{ marginTop: \"2%\" }}>\n                    <ListGroup>\n                        {\n                            data[type].map((proj, index) => {\n                                return <ListGroup.Item key={index}>\n                                    <div>\n                                        <Link to={`/projects/${proj.creator}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                            {proj.projname}\n                                        </Link>\n                                        {\n                                            type === 'backed'\n                                                ? <div style={{ marginTop: \"1%\" }}>\n                                                    <p style={{ marginTop: \"0\",marginBottom:\"0\" }}> <b>Amount Funded: </b> S$ {proj.amount} </p>\n                                                </div>\n                                                : null\n                                        }\n                                    </div>\n                                </ListGroup.Item>\n                            })\n                        }\n                    </ListGroup>\n                </div>\n            )\n        }\n    }\n\n    renderBenefits = (data) => {\n        if (data !== null) {\n            if (data.benefits.length === 0) {\n                return (\n                    <div style={{ textAlign: \"center\", marginTop: \"2%\" }}>\n                        <h5>\n                            {`This user hasn't received any benefits through backing projects.`}\n                        </h5>\n                    </div>\n                )\n            }\n            return (\n                <div style={{ marginTop: \"2%\" }}>\n                    <ListGroup>\n                        {\n                            data.benefits.map((proj, index) => {\n                                return <ListGroup.Item key={index}>\n                                    <div>\n                                        <Link to={`/projects/${proj.creator}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                            {proj.projname}\n                                        </Link>\n                                        <div style={{ marginTop: \"1%\" }}>\n                                            <p style={{ marginBottom: \"0\" }}> <b>Benefit: </b> {proj.benefit} </p>\n                                            <p style={{ marginTop: \"0\",marginBottom:\"0\" }}> <b>Amount Funded: </b> S$ {proj.amountfunded} </p>\n                                        </div>\n                                    </div>\n                                </ListGroup.Item>\n                            })\n                        }\n                    </ListGroup>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        let data = this.state.data;\n        {\n            return data === null ? null :\n                (\n                    <div>\n                        <NavbarComp />\n                        <div style={{ marginTop: \"2%\", display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center' }}>\n                            <div style={{ display: 'inline-block' }}>\n                                <h2>{data.name}</h2>\n                            </div>\n                            <div style={{ display: 'inline-block' }}>\n                                <p>@{data.username}</p>\n                            </div>\n                        </div>\n                        <Container>\n                            <Row>\n                                <Col></Col>\n                                <Col xs={7}>\n                                    <div style={{ alignContent: \"center\" }}>\n                                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                                            <Tab eventKey=\"created\" title=\"Created\">\n                                                {/* <div style ={{textAlign: \"center\"}}><h4>Hi</h4></div> */}\n                                                {this.renderProjects(data, 'created')}\n                                            </Tab>\n                                            <Tab eventKey=\"backed\" title=\"Backed\">\n                                                {this.renderProjects(data, 'backed')}\n                                            </Tab>\n                                            <Tab eventKey=\"following\" title=\"Following\">\n                                                {this.renderProjects(data, 'followed')}\n                                            </Tab>\n                                            <Tab eventKey=\"benefits\" title=\"Benefits Received\">\n                                                {this.renderBenefits(data)}\n                                            </Tab>\n                                        </Tabs>\n                                    </div>\n                                </Col>\n                                <Col></Col>\n                            </Row>\n                        </Container>\n\n                    </div>\n                )\n        }\n    }\n}\n\nexport default withRouter(UserProfilePage)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Tab, Tabs, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport AuthHelperMethods from '../AuthHelperMethods';\nimport NavbarComp from '../NavBar/NavBar'\n\nclass ExploreProjectsPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectData: [],\n            hasSearchedSomething: false,\n            searchString: ''\n        }\n    }\n\n    componentDidMount() {\n        const locationState = this.props.location.state\n        let searchString = null\n        if (locationState !== undefined) {\n            searchString = locationState.searchString\n            console.log(`search for projects containing ${searchString}`)\n        }\n        if (searchString === undefined || searchString === null) {\n            axios.get('https://crowdfunding-2102.herokuapp.com/api/v1/allProjects')\n                .then(response => {\n                    console.log(response.data);\n                    this.setState({\n                        projectData: response.data\n                    })\n                })\n                .catch(error => {\n                    alert(error)\n                })\n        } else {\n            axios.get(`https://crowdfunding-2102.herokuapp.com/api/v1/searchProjects/${searchString}`)\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({\n                        projectData: response.data,\n                        hasSearchedSomething: true,\n                        searchString: searchString\n                    })\n                })\n                .catch(error => {\n                    alert(error)\n                })\n        }\n    }\n\n    renderProjectList = (details) => {\n        let renderText = \"There are no projects to see.\"\n        if (details.length === 0 && this.state.hasSearchedSomething) {\n            renderText = `We couldn't find any projects containing the keyphrase \"${this.state.searchString}\".`\n        }\n\n        if (details.length === 0) {\n            var link = <a href=\"/start\">here</a>;\n            return (\n                // <div style={{ display: 'flex', marginTop: \"5%\", flexDirection: \"column \", justifyContent: 'center', alignContent: \"center\" }}>\n                <div style={{ textAlign: \"center\", marginTop: \"5%\"}}>\n                    <div>\n                        <h4>{renderText} </h4>\n                    </div>\n                    <div>\n                        <h4>Click {link} to start a new project!</h4>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div style={{ marginTop: \"3%\" }}>\n                <div style={{ marginLeft: \"20px\" }}>\n                    <h3>Projects: </h3>\n                </div>\n                {/* <ol>\n                    {\n                        details.map((proj, index) => {\n                            return <li key={index}>\n                                <div>\n                                    <Link to={`/projects/${proj.username}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                        {proj.projname}\n                                    </Link>\n                                    <h6>{proj.description}</h6>\n                                    <h6>Creator: {proj.username} </h6>\n                                    <h6>Org: {proj.orgname === '$Independent$'? 'Independent': proj.orgname} </h6>\n                                    <h6>Category: {proj.categories}</h6>\n                                </div>\n                            </li>\n                        })\n                    }\n                </ol> */}\n                <ListGroup>\n                    {\n                        details.map((proj, index) => {\n                            return <ListGroup.Item key={index}>\n                                <div>\n                                    <Link to={`/projects/${proj.username}/${proj.orgname}/${proj.teamname}/${proj.projname}`} >\n                                        {proj.projname}\n                                    </Link>\n                                    <h6>{proj.description}</h6>\n                                    <h6>Creator: @{proj.username} </h6>\n                                    <h6>Org: {proj.orgname === '$Independent$' ? 'Independent' : proj.orgname} </h6>\n                                    <h6>Category: {proj.categories}</h6>\n                                </div>\n                            </ListGroup.Item>\n                        })\n                    }\n                </ListGroup>\n            </div>\n        )\n    }\n\n    render() {\n        let details = this.state.projectData\n        return (\n            <div>\n                <NavbarComp />\n                {this.renderProjectList(details)}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ExploreProjectsPage)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport LoginPage from './components/LoginPage/LoginPage'\nimport SignUpPage from './components/SignUpPage/SignUpPage'\nimport StartProjectPage from './components/StartProjectPage/StartProjectPage'\nimport DisplayProjectDetailsPage from './components/DisplayProjectDetailsPage/DisplayProjectDetailsPage'\nimport EditProjectDetailsPage from './components/EditProjectDetailsPage/EditProjectDetailsPage'\nimport FundProjectPage from './components/FundProjectPage/FundProjectPage'\nimport UserProfilePage from './components/UserProfilePage/UserProfilePage'\nimport ExploreProjectsPage from './components/ExploreProjectsPage/ExploreProjectsPage'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst routing = (\n    <Router>\n      <div>\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route path=\"/signup\" component={SignUpPage} />\n            <Route path=\"/start\" component={StartProjectPage} />\n            <Route path=\"/editproject/:username/:orgname/:teamname/:projname\" component={EditProjectDetailsPage} />\n            <Route path=\"/projects/:username/:orgName/:teamName/:projName\" component={DisplayProjectDetailsPage} />\n            <Route path=\"/explore\" component={ExploreProjectsPage} />\n            <Route path=\"/fund/:username/:orgName/:teamName/:projName\" component={FundProjectPage} />\n            <Route path=\"/profile/:username\" component={UserProfilePage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(routing, rootElement);\n} else {\n  ReactDOM.render(routing, rootElement);\n}\n// ReactDOM.render(\n//     routing\n//     , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/books.889937b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game.17cb381f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie.4a2a39c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fundit.377c1788.png\";"],"sourceRoot":""}